name: test

on:
  pull_request:
  push:
    branches: [main]

jobs:
  golang:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            ENSURECONDA_EXE: ensureconda-linux-amd64
          - os: macos-latest
            ENSURECONDA_EXE: ensureconda-darwin-amd64
          - os: windows-latest
            ENSURECONDA_EXE: ensureconda-windows-amd64.exe
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Set up Python
        uses: actions/setup-python@v5

      - run: go test ./...
      - run: python src/golang/build.py
      - run: python -m pip install pytest
      - run: python -m pytest src/golang/test_binaries.py

  python:
    name: ${{ matrix.pixi-env }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        pixi-env: ["test-py38", "test-py313"]
    defaults:
      run:
        shell: bash -eo pipefail -l {0}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          environments: ${{ matrix.pixi-env }}
          activate-environment: true

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 \
                          --show-source --statistics

          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero \
                          --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        run: |
          coverage run --parallel-mode -m pytest -vv
          coverage combine --append
          coverage report -m
